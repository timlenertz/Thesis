Point cloud fusion
Software architecture for complete point cloud fusion framework
Subset for thesis project implemented


Libraries used:
	Not use PCL
		Need to study/work on algorithm implementations
		Need to handle large point sets
		Problems with command line tools
		Restrict mainly to merging/registration
	Use Eigen
		Parallelized linear algebra/math functionality
		Also used by PCL in case
	OpenCV for image analysis + range images
	OpenMP for parallelization
	Maybe:
		CGAL (compatible? with Eigen) for CG algorithms
		HDF5 for structure serialization
		
	

Architecture Requirements:
	Test out different methods
	Handling of large data sets
	Differents kinds/combinations of input data
	Measure results accuracy
	Visualize/Record intermediary representations
	Generate artificial data sets


Output:
	Complete fused model (point cloud)

Input:
	Scene Assets (name?)
		Kept in working memory (file mapping)
		Compromise between compactness (large size) and efficiency (alignment, vectorization)
		Import/Export of input, output, intermediary

	Attributes:
		Transformation matrix, relative to another asset (photo?)
		Quality attribute of transformation (none, user defined, coarse, fine, final?)

	3D Unstructured point set (point cloud)
	2.5D Structured point set (from range image)
		From range image
		Transform spherical coords on import
		As structured point cloud variant
	2D Photo
		? best representation, what preprocessing
		matrix by spherical coordinates, ray directions?

Point set structures?
	Raw (unordered list)
	Range Image (2D matrix)
	Octree, KDtree, others?

Point variants
	point_xyz			using Vector4f for alignment+vectorization
	point_xyzrgb (?)		still 16 byte, need to swap out/in pt[3]
	point_full			32 byte: RGB, normal, 1 byte (saliency, category, intensity?)



QUESTIONS
- How to do interface/visualizations?
	Not too much additional work
	Scriptable when possible
	(ie Python interface, compzt ipython notebook)
- Large scale architecture for this
- What to implement (will see)
- Make versatile

Pipeline Architecture?:
	Name?:
		Component
		Module
		Operator no
		Algorithm no
		Node
	Component based:
		Input assets
		Output assets
		Run in thread(s)
		Track progress
	Assets mutable
	Components:
		Accessible from interface/GUI